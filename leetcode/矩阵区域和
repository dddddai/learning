给你一个 m * n 的矩阵 mat 和一个整数 K ，
请你返回一个矩阵 answer ，其中每个 answer[i][j] 是所有满足下述条件的元素 mat[r][c] 的和： 

i - K <= r <= i + K, j - K <= c <= j + K 
(r, c) 在矩阵内。
 

示例 1：

输入：mat = [[1,2,3],[4,5,6],[7,8,9]], K = 1
输出：[[12,21,16],[27,45,33],[24,39,28]]


示例 2：

输入：mat = [[1,2,3],[4,5,6],[7,8,9]], K = 2
输出：[[45,45,45],[45,45,45],[45,45,45]]




class Solution {
    public int[][] matrixBlockSum(int[][] mat, int k) {
        int m=mat.length,n=mat[0].length;
        int[][] sum=new int[m+1][n+1];
        for(int i=1;i<=m;++i){
            for(int j=1;j<=n;++j){
                sum[i][j]=mat[i-1][j-1]+sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];
            }
        }
        int[][] result=new int[m][n];
        for(int i=0;i<m;++i){
            for(int j=0;j<n;++j){
                int a=Math.max(0,i-k),b=Math.max(0,j-k);
                int c=Math.min(m-1,i+k),d=Math.min(n-1,j+k);
                result[i][j]=sum[c+1][d+1]-sum[c+1][b]-sum[a][d+1]+sum[a][b];
            }
        }
        return result;
    }
}
