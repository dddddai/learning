给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。

求在该柱状图中，能够勾勒出来的矩形的最大面积。




class Solution(object):
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        """
        stack = []
        result = 0

        for i, h in enumerate(heights):
            while stack and heights[stack[-1]] >= h:
                idx = stack.pop()
                result = max(result, heights[idx] * (i - 1 - stack[-1]
                                                     if stack else i))

            stack.append(i)

        while stack:
            idx = stack.pop()
            result = max(result, heights[idx] * (len(heights) - 1 - stack[-1]
                                                 if stack else len(heights)))

        return result
        
        
        
        
        
class Solution {
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> stack=new Stack<>();
        int result=0;
        for(int i=0;i<heights.length;++i){
            while(!stack.isEmpty() && heights[stack.peek()]>=heights[i]){
                int idx=stack.pop();
                result=Math.max(result,heights[idx]*(stack.isEmpty()?
                                                     i:i-1-stack.peek()));
            }
            stack.push(i);
        }
        while(!stack.isEmpty()){
            int idx=stack.pop();
            result=Math.max(result,heights[idx]*(stack.isEmpty()?
                                                 heights.length:heights.length-1-stack.peek()));
        }
        return result;
    }
}        
