class Solution:
    # 返回对应节点TreeNode
    count=0
    def KthNode(self, pRoot, k):
        # write code here
        if pRoot is None:
            return
        result=self.KthNode(pRoot.left,k)
        if result: 
            return result
        self.count+=1
        if self.count==k: 
            return pRoot
        result=self.KthNode(pRoot.right,k)
        return result

# class Solution:
#     def kthSmallest(self, root, k):
#         """
#         :type root: TreeNode
#         :type k: int
#         :rtype: int
#         """
#         def inorder(root,alist,k):
#             if root:
#                 inorder(root.left,alist,k)
#                 if len(alist)==k:
#                     return
#                 alist.append(root.val)
#                 inorder(root.right,alist,k)
#         result = []
#         inorder(root,result,k)
#         return result[-1]
