给定两个大小相等的数组 A 和 B，A 相对于 B 的优势可以用满足 A[i] > B[i] 的索引 i 的数目来描述。

返回 A 的任意排列，使其相对于 B 的优势最大化。

 

示例 1：

输入：A = [2,7,11,15], B = [1,10,4,11]
输出：[2,11,7,15]
示例 2：

输入：A = [12,24,8,32], B = [13,25,32,11]
输出：[24,32,8,12]
 

提示：

1 <= A.length = B.length <= 10000
0 <= A[i] <= 10^9
0 <= B[i] <= 10^9





class Solution {
    public int[] advantageCount(int[] A, int[] B) {
        TreeMap<Integer,Integer> map=new TreeMap<>();
        for(int num:A){
            map.put(num,map.getOrDefault(num,0)+1);
        }
        int[] result=new int[A.length];
        Arrays.fill(result,-1);
        for(int i=0;i<A.length;++i){
            Map.Entry<Integer,Integer> e=map.higherEntry(B[i]);
            if(e!=null){
                result[i]=e.getKey();
                if(e.getValue()==1){
                    map.remove(e.getKey());
                }else{
                    map.put(e.getKey(),e.getValue()-1);
                }
            }
        }
        for(int i=0;i<A.length;++i){
            if(result[i]==-1){
                Map.Entry<Integer,Integer> e=map.firstEntry();
                result[i]=e.getKey();
                if(e.getValue()==1){
                    map.remove(e.getKey());
                }else{
                    map.put(e.getKey(),e.getValue()-1);
                }
            }
        }
        return result;
    }
}
