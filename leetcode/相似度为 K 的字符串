如果可以通过将 A 中的两个小写字母精确地交换位置 K 次得到与 B 相等的字符串，
我们称字符串 A 和 B 的相似度为 K（K 为非负整数）。

给定两个字母异位词 A 和 B ，返回 A 和 B 的相似度 K 的最小值。

示例 1：
输入：A = "ab", B = "ba"
输出：1

示例 2：
输入：A = "abc", B = "bca"
输出：2

示例 3：
输入：A = "abac", B = "baca"
输出：2

示例 4：
输入：A = "aabc", B = "abca"
输出：2




class Solution {
    public int kSimilarity(String a, String b) {
        int match=0;
        int n=a.length();
        while(match<n && a.charAt(match)==b.charAt(match)){
            ++match;
        }
        Queue<String> q=new LinkedList<>();
        Set<String> set=new HashSet<>(1000);
        q.offer(a);
        int result=0;
        while(true){
            int k=q.size();
            while(k-->0){
                String s=q.poll();
                int i=match;
                while(i<n && s.charAt(i)==b.charAt(i)){
                    ++i;
                }
                if(i==n){
                    return result;
                }
                int j=i;
                while(++i<n){
                    if(s.charAt(i)==b.charAt(j) && s.charAt(i)!=b.charAt(i)){
                        String next=swap(s,i,j);
                        if(set.add(next)){
                            q.offer(next);
                        }
                    }
                }
            }
            ++result;
            ++match;
        }
    }

    private String swap(String s,int i,int j){
        char[] arr=s.toCharArray();
        char tmp=arr[i];
        arr[i]=arr[j];
        arr[j]=tmp;
        return new String(arr);
    }
}
