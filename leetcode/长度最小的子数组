给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的连续子数组。如果不存在符合条件的连续子数组，返回 0。

示例: 

输入: s = 7, nums = [2,3,1,2,4,3]
输出: 2
解释: 子数组 [4,3] 是该条件下的长度最小的连续子数组。


class Solution(object):
    def minSubArrayLen(self, s, nums):
        """
        :type s: int
        :type nums: List[int]
        :rtype: int
        """
        size=len(nums)
        l=r=0
        result=size+1
        cur_sum=0
        while l<size:
            if r<size and cur_sum<s:
                cur_sum+=nums[r]
                r+=1
            else:
                cur_sum-=nums[l]
                l+=1
            if cur_sum>=s:   
                result=min(result,r-l)
        return result if result<=size else 0
                
