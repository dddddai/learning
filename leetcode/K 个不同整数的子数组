给定一个正整数数组 A，如果 A 的某个子数组中不同整数的个数恰好为 K，则称 A 的这个连续、不一定独立的子数组为好子数组。

（例如，[1,2,3,1,2] 中有 3 个不同的整数：1，2，以及 3。）

返回 A 中好子数组的数目。

 

示例 1：

输入：A = [1,2,1,2,3], K = 2
输出：7
解释：恰好由 2 个不同整数组成的子数组：[1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].


示例 2：

输入：A = [1,2,1,3,4], K = 3
输出：3
解释：恰好由 3 个不同整数组成的子数组：[1,2,1,3], [2,1,3], [1,3,4].




class Solution {
    public int subarraysWithKDistinct(int[] arr, int k) {
        return func(arr,k)-func(arr,k-1);
    }

    private int func(int[] arr,int k){
        int l=0,r=0;
        int result=0;
        Map<Integer,Integer> map=new HashMap<>((int)(k/0.75)+1);
        while(r<arr.length){
            map.put(arr[r],map.getOrDefault(arr[r],0)+1);
            while(map.size()>k){
                Integer x=map.get(arr[l]);
                if(x==1){
                    map.remove(arr[l++]);
                }else{
                    map.put(arr[l++],x-1);
                }
            }
            result+=++r-l;
        }
        return result;
    }
}
