给定一个排序好的数组，两个整数 k 和 x，从数组中找到最靠近 x（两数之差最小）的 k 个数。
返回的结果必须要是按升序排好的。如果有两个数与 x 的差值一样，优先选择数值较小的那个数。

示例 1:

输入: [1,2,3,4,5], k=4, x=3
输出: [1,2,3,4]
 

示例 2:

输入: [1,2,3,4,5], k=4, x=-1
输出: [1,2,3,4]
 

说明:

k 的值为正数，且总是小于给定排序数组的长度。
数组不为空，且长度不超过1e4
数组里的每个元素与 x 的绝对值不超过1e4





class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> result=new ArrayList<>(k);
        if(x<=arr[0]){
            for(int i=0;i<k;++i){
                result.add(arr[i]);
            }
            return result;
        }
        if(x>=arr[arr.length-1]){
            for(int i=arr.length-k;i<arr.length;++i){
                result.add(arr[i]);
            }
            return result;
        }
        int l=0,r=arr.length-1;
        while(l<r){
            int mid=(l+r)>>1;
            if(x<arr[mid]){
                r=mid;
            }else if(x>arr[mid]){
                l=mid+1;
            }else{
                l=r=mid;
                break;
            }
        }
        if(x-arr[l-1]<arr[l]-x){
            --l;
            --r;
        }
        for(int i=1;i<k;++i){
            if(r==arr.length-1){
                --l;
                continue;
            }
            if(l==0){
                ++r;
                continue;
            }
            if(arr[r+1]-x<x-arr[l-1]){
                ++r;
            }else{
                --l;
            }
        }
        for(int i=l;i<=r;++i){
            result.add(arr[i]);
        }
        return result;
    }
}
