给定一个无序的数组，找出数组在排序之后，相邻元素之间最大的差值。

如果数组元素个数小于 2，则返回 0。

示例 1:

输入: [3,6,9,1]
输出: 3
解释: 排序后的数组是 [1,3,6,9], 其中相邻元素 (3,6) 和 (6,9) 之间都存在最大差值 3。
示例 2:

输入: [10]
输出: 0
解释: 数组元素个数小于 2，因此返回 0。




class Solution {
    public int maximumGap(int[] nums) {
        if(nums.length<2){
            return 0;
        }
        int max=nums[0],min=nums[0];
        for(int i=1;i<nums.length;++i){
            max=Math.max(max,nums[i]);
            min=Math.min(min,nums[i]);
        }
        int bucketSize=Math.max(1,(max-min)/(nums.length-1));
        int cnt=(max-min)/bucketSize+1;
        int[] minOfBucket=new int[cnt];
        int[] maxOfBucket=new int[cnt];
        Arrays.fill(minOfBucket,Integer.MAX_VALUE);
        Arrays.fill(maxOfBucket,Integer.MIN_VALUE);
        
        for(int num:nums){
            int idx=(num-min)/bucketSize;
            minOfBucket[idx]=Math.min(minOfBucket[idx],num);
            maxOfBucket[idx]=Math.max(maxOfBucket[idx],num);
        }
        int result=0;
        for(int i=1;i<cnt;++i){
            if(minOfBucket[i]==Integer.MAX_VALUE){      //说明这个bucket没有数据
                maxOfBucket[i]=maxOfBucket[i-1];        //上一个bucket的最大值留给下一个bucket用
            }else{
                result=Math.max(result,minOfBucket[i]-maxOfBucket[i-1]);
            }
        }
        return result;
    }
}
