二叉搜索树中的两个节点被错误地交换。

请在不改变其结构的情况下，恢复这棵树。

示例 1:

输入: [1,3,null,null,2]

   1
  /
 3
  \
   2

输出: [3,1,null,null,2]

   3
  /
 1
  \
   2
示例 2:

输入: [3,1,4,null,null,2]

  3
 / \
1   4
   /
  2

输出: [2,1,4,null,null,3]

  2
 / \
1   4
   /
  3




class Solution {
    private TreeNode pre=new TreeNode(Integer.MIN_VALUE);
    private TreeNode p1,p2;
    
    public void recoverTree(TreeNode root) {
        inorder(root);
        int tmp=p1.val;
        p1.val=p2.val;
        p2.val=tmp;
    }
    
    private void inorder(TreeNode root){
        if(root==null){
            return;
        }
        inorder(root.left);
        if(p1==null && pre.val>root.val){
            p1=pre;
        }
        if(p1!=null){
            if(root.val<p1.val){
                p2=root;
            }else{
                return;
            }
        }
        pre=root;
        inorder(root.right);
    }
}
