给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。

示例:

输入: ["eat", "tea", "tan", "ate", "nat", "bat"],
输出:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]



class Solution(object):
    def groupAnagrams(self, strs):
        """
        :type strs: List[str]
        :rtype: List[List[str]]
        """
        d={}
        for s in strs:
            sorted_word=''.join(sorted(s))
            if sorted_word in d:
                d[sorted_word].append(s)
            else:
                d[sorted_word]=[s]
        return d.values()



class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> result=new ArrayList<>();
        Map<String,List<String>> map=new HashMap<>();
        for(String s:strs)
        {
            char[] arr=s.toCharArray();
            Arrays.sort(arr);
            String sortedWord=new String(arr);
            if(map.containsKey(sortedWord))
                map.get(sortedWord).add(s);
            else
            {
                List<String> newCategory=new ArrayList<>();
                newCategory.add(s);
                map.put(sortedWord,newCategory);
            }
        }
        for(List<String> category:map.values())
            result.add(category);
        return result;
    }
}
