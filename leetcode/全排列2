给定一个可包含重复数字的序列，返回所有不重复的全排列。

示例:

输入: [1,1,2]
输出:
[
  [1,1,2],
  [1,2,1],
  [2,1,1]
]

class Solution(object):       
    def permuteUnique(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if len(nums)<=1:
             return [nums]
        result=[]
        nums.sort()
        for i in xrange(len(nums)):
            if i and nums[i]==nums[i-1]:
                continue
            for p in self.permuteUnique(nums[:i]+nums[i+1:]):
                result.append([nums[i]]+p)
        return result


class Solution {
    List<List<Integer>> result=new ArrayList<>();
    
    void func(List<Integer>candidates,int[] nums,boolean[] used)
    {
        if(candidates.size()==nums.length)
            result.add(new ArrayList<>(candidates));
            //不知道为什么不能直接add(candidates)
        else
        {
            for(int i=0;i<nums.length;++i)
            {
                if(used[i] || (i!=0 && nums[i]==nums[i-1] && !used[i-1]))
                    continue;
                used[i]=true;
                candidates.add(nums[i]);
                func(candidates,nums,used);
                used[i]=false;
                candidates.remove(candidates.size()-1);
            }
        }
    }
    
    public List<List<Integer>> permuteUnique(int[] nums) {
        if(nums.length==0)
            return result;
        Arrays.sort(nums);
        func(new ArrayList<Integer>(),nums,new boolean[nums.length]);
        return result;
    }
}
