如果正整数可以被 A 或 B 整除，那么它是神奇的。

返回第 N 个神奇数字。由于答案可能非常大，返回它模 10^9 + 7 的结果。


示例 1：

输入：N = 1, A = 2, B = 3
输出：2

示例 2：

输入：N = 4, A = 2, B = 3
输出：6

示例 3：

输入：N = 5, A = 2, B = 4
输出：10

示例 4：

输入：N = 3, A = 6, B = 4
输出：8




class Solution {
    public int nthMagicalNumber(int n, int a, int b) {
        long lcm=a*b/gcd(a,b);
        long l=Math.min(a,b);
        long r=l*n;
        long mod=(long)(1e9+7);
        while(l<r){
            long mid=(l+r)>>1;
            if(mid/a+mid/b-mid/lcm<n){
                l=mid+1;
            }else{
                r=mid;
            }
        }
        return (int)(l%mod);
    }

    private int gcd(int a,int b){
        while(b!=0){
            int tmp=a%b;
            a=b;
            b=tmp;
        }
        return a;
    }
}
