class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        from collections import deque
        
        if not root:
            return []
        nodes=[[]]
        dq=deque()
        dq.append((root,0))
        while dq:
            node,level=dq.popleft()
            if level<len(nodes):
                nodes[level].append(node.val)
            else:
                nodes.append([])
                nodes[level].append(node.val)
            if node.left:
                dq.append((node.left,level+1))
            if node.right:
                dq.append((node.right,level+1))
        return nodes
