给你一个数组 nums ，每次操作你可以选择 nums 中的任意一个元素并将它改成任意值。

请你返回三次操作后， nums 中最大值与最小值的差的最小值。

示例 1：
输入：nums = [5,3,2,4]
输出：0
解释：将数组 [5,3,2,4] 变成 [2,2,2,2].
最大值与最小值的差为 2-2 = 0 。

示例 2：
输入：nums = [1,5,0,10,14]
输出：1
解释：将数组 [1,5,0,10,14] 变成 [1,1,0,1,1] 。
最大值与最小值的差为 1-0 = 1 。

示例 3：
输入：nums = [6,6,0,1,1,4,6]
输出：2

示例 4：
输入：nums = [1,5,6,14,15]
输出：1




class Solution {
    public int minDifference(int[] nums) {
        return func(nums,3);
    }

    // 扩展到k次操作
    private int func(int[] arr,int k){
        int n=arr.length;
        if(n<=k+1){
            return 0;
        }
        Arrays.sort(arr);
        int result=Integer.MAX_VALUE;
        for(int i=0;i<=k;++i){
            result=Math.min(result,arr[n-1-i]-arr[k-i]);
        }
        return result;
    }
}



func minDifference(nums []int) int {
    return help(nums,3)
}

// 扩展到k次操作
func help(arr []int,k int) int {
    n:=len(arr)
    if n<=k+1 {
        return 0
    }
    sort.Ints(arr)
    result:=int(math.MaxInt64)
    for i:=0;i<=k;i++ {
        if arr[n-1-i]-arr[k-i]<result {
            result=arr[n-1-i]-arr[k-i]
        }
    }
    return result
}
