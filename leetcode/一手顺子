爱丽丝有一手（hand）由整数数组给定的牌。 

现在她想把牌重新排列成组，使得每个组的大小都是 W，且由 W 张连续的牌组成。

如果她可以完成分组就返回 true，否则返回 false。

 

示例 1：

输入：hand = [1,2,3,6,2,3,4,7,8], W = 3
输出：true
解释：爱丽丝的手牌可以被重新排列为 [1,2,3]，[2,3,4]，[6,7,8]。
示例 2：

输入：hand = [1,2,3,4,5], W = 4
输出：false
解释：爱丽丝的手牌无法被重新排列成几个大小为 4 的组。




class Solution {
    public boolean isNStraightHand(int[] hand, int W) {
        if(hand.length%W!=0){
            return false;
        }
        TreeMap<Integer,Integer> map=new TreeMap<>();
        for(int num:hand){
            map.put(num,map.getOrDefault(num,0)+1);
        }
        boolean result=true;
        while(result && !map.isEmpty()){
            int i=map.firstKey();
            for(int j=0;j<W;++j){
                Integer times=map.get(i+j);
                if(times==null){
                    result=false;
                    break;
                }
                if(times==1){
                    map.remove(i+j);
                }else{
                    map.put(i+j,times-1);
                }
            }
        }
        return result;
    }
}
