class Solution(object):
    def deleteNode(self, root, key):
        """
        :type root: TreeNode
        :type key: int
        :rtype: TreeNode
        """
        if root is None:
            return
        if key<root.val:
            root.left=self.deleteNode(root.left,key)
        elif key>root.val:
            root.right=self.deleteNode(root.right,key)
        else:
            if root.left is None:
                return root.right
            p=root.left         #寻找左子树的最大值作为root
            if p.right is None:
                root.val=p.val
                root.left=p.left
                return root
            
            while p.right.right:
                p=p.right
            root.val=p.right.val
            p.right=p.right.left
            
        return root
        
        
        
        
        
class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null){
            return null;
        }
        if(key<root.val){
            root.left=deleteNode(root.left,key);
        }else if(key>root.val){
            root.right=deleteNode(root.right,key);
        }else{
            if(root.left==null){
                return root.right;
            }
            TreeNode p=root.left;
            if(p.right==null){
                root.val=p.val;
                root.left=p.left;
                return root;
            }
            while(p.right.right!=null){
                p=p.right;
            }
            root.val=p.right.val;
            p.right=p.right.left;
        }
        return root;
    }
}        
