给定一个数组，包含从 1 到 N 所有的整数，但其中缺了两个数字。你能在 O(N) 时间内只用 O(1) 的空间找到它们吗？

以任意顺序返回这两个数字均可。

示例 1:

输入: [1]
输出: [2,3]
示例 2:

输入: [2,3]
输出: [1,4]
提示：

nums.length <= 30000




nums数组的所有数和1~N所有数一同构成的集合特征为：
该集合内只有2个数字出现过1次，而其余数字都出现2次，请找出这2个只出现1次的数字



class Solution {
    public int[] missingTwo(int[] nums) {
        int n=nums.length+2;
        int x=0;
        for(int i=1;i<=n;++i){
            x^=i;
        }
        for(int num:nums){
            x^=num;
        }
        int j=0;
        while(((x>>j)&1)==0){
            ++j;
        }
        int a=0,b=0;
        for(int i=1;i<=n;++i){
            if(((i>>j)&1)==0){
                a^=i;
            }else{
                b^=i;
            }
        }
        for(int num:nums){
            if(((num>>j)&1)==0){
                a^=num;
            }else{
                b^=num;
            }
        }
        return new int[]{a,b};
    }
}
