示例 1:

nums1 = [1, 3]
nums2 = [2]

中位数是 2.0




class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len=nums1.length+nums2.length;
        if((len&1)==0){
            return (func(nums1,nums2,len>>1)+func(nums1,nums2,(len>>1)+1))/2.0;
        }
        return func(nums1,nums2,(len+1)>>1);
    }
    
    private int func(int[] nums1,int[] nums2,int k){
        if(nums2.length<nums1.length){
            return func(nums2,nums1,k);
        }
        int low=0,high=Math.min(nums1.length,k);
        int l1=0,r1=0,l2=0,r2=0;
        while(low<=high){
            int i=(low+high)>>1;
            int j=k-i;
            if(j>nums2.length){
                low=i+1;
                continue;
            }
            l1 = i==0 ? Integer.MIN_VALUE:nums1[i-1];
            r1 = i==nums1.length ? Integer.MAX_VALUE:nums1[i];
            l2 = j==0 ? Integer.MIN_VALUE:nums2[j-1];
            r2 = j==nums2.length ? Integer.MAX_VALUE:nums2[j];
            if(l1>r2){
                high=i-1;
            }else if(l2>r1){
                low=i+1;
            }else{
                break;
            }
        }
        return Math.max(l1,l2);
    }
}
