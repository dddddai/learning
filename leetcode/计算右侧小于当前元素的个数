给定一个整数数组 nums，按要求返回一个新数组 counts。数组 counts 有该性质： 
counts[i] 的值是  nums[i] 右侧小于 nums[i] 的元素的数量。

示例:

输入: [5,2,6,1]
输出: [2,1,1,0] 
解释:
5 的右侧有 2 个更小的元素 (2 和 1).
2 的右侧仅有 1 个更小的元素 (1).
6 的右侧有 1 个更小的元素 (1).
1 的右侧有 0 个更小的元素.


从尾到头遍历，维护一个升序数组，该数组中对应元素的下标即小于的个数

class Solution(object):
    def countSmaller(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        size=len(nums)
        tmp=[]
        result=[-1]*size
        for i in range(size-1,-1,-1):
            l,r=0,len(tmp)-1
            while l<=r:
                mid=(l+r)>>1
                if tmp[mid]<nums[i]:
                    l=mid+1
                else:
                    r=mid-1
            result[i]=l
            tmp.insert(l,nums[i])
        return result
        

java:

class Solution {
    public List<Integer> countSmaller(int[] nums) {
        Integer[] result=new Integer[nums.length];
        List<Integer> tmp=new ArrayList<>();
        for(int i=nums.length-1;i>=0;i--)
        {
            int l=0,r=tmp.size()-1;
            while(l<=r)
            {
                int mid=(l+r)>>1;
                if(tmp.get(mid)<nums[i])
                    l=mid+1;
                else
                    r=mid-1;
            }
            tmp.add(l,nums[i]);
            result[i]=l;
        }
        return Arrays.asList(result);
    }
}
