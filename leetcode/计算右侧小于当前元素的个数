给定一个整数数组 nums，按要求返回一个新数组 counts。数组 counts 有该性质： 
counts[i] 的值是  nums[i] 右侧小于 nums[i] 的元素的数量。

示例:

输入: [5,2,6,1]
输出: [2,1,1,0] 
解释:
5 的右侧有 2 个更小的元素 (2 和 1).
2 的右侧仅有 1 个更小的元素 (1).
6 的右侧有 1 个更小的元素 (1).
1 的右侧有 0 个更小的元素.


从尾到头遍历，维护一个升序数组，该数组中对应元素的下标即小于的个数

class Solution(object):
    def countSmaller(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        length=len(nums)
        size=0
        tmp=[]
        result=[-1]*length
        for i in range(length-1,-1,-1):
            l,r=0,size-1
            while l<=r:
                mid=(l+r)//2
                if tmp[mid]<nums[i]:
                    l=mid+1
                elif nums[i]<tmp[mid]:
                    r=mid-1
                else:   
                    r-=1    #因为是计算小于的个数，所以要保证移动到最左边
            result[i]=l
            tmp.insert(l,nums[i])
            size+=1
        return result
        
