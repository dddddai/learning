给定一个仅包含 0 和 1 的二维二进制矩阵，找出只包含 1 的最大矩形，并返回其面积。

示例:

输入:
[
  ["1","0","1","0","0"],
  ["1","0","1","1","1"],
  ["1","1","1","1","1"],
  ["1","0","0","1","0"]
]
输出: 6





class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix.length==0){
            return 0;
        }
        int result=0;
        int[] arr=new int[matrix[0].length];
        for(char[] row:matrix){
            for(int i=0;i<matrix[0].length;++i){
                if(row[i]=='0'){
                    arr[i]=0;
                }else{
                    ++arr[i];
                }
            }
            result=Math.max(result,func(arr));
        }
        return result;
    }
    
    private int func(int[] arr){
        Stack<Integer> stack=new Stack<>();
        stack.push(-1);
        int result=0;
        for(int i=0;i<arr.length;++i){
            while(stack.size()>1 && arr[i]<arr[stack.peek()]){
                result=Math.max(result,arr[stack.pop()]*(i-1-stack.peek()));
            }
            stack.push(i);
        }
        while(stack.size()>1){
            result=Math.max(result,arr[stack.pop()]*(arr.length-1-stack.peek()));
        }
        return result;
    }
}
