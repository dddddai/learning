给定一个未排序的整数数组，找出其中没有出现的最小的正整数。

示例 1:

输入: [1,2,0]
输出: 3
示例 2:

输入: [3,4,-1,1]
输出: 2
示例 3:

输入: [7,8,9,11,12]
输出: 1

class Solution(object):
    def firstMissingPositive(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        l=1
        n=len(nums)
        i=0
        while i<n:
            idx=nums[i]-1
            if nums[i]<=0 or nums[i]==i+1 or idx>=n or nums[idx]==nums[i]:
                i+=1
                continue
            nums[idx],nums[i]=nums[i],nums[idx]
        for i in range(n):
            if nums[i]!=i+1:
                return i+1
        return n+1
