给定一个没有重复数字的序列，返回其所有可能的全排列。

1.
class Solution(object):
     def permute(self, nums):
         """
         :type nums: List[int]
         :rtype: List[List[int]]
         """
         # from itertools import permutations
         # return list(permutations(nums))
         if len(nums)<=1:
             return [nums]
         result=[]
         for i in xrange(len(nums)):
             for p in self.permute(nums[:i]+nums[i+1:]):
                 result.append([nums[i]]+p)
         return result
         
2.         
class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        # from itertools import permutations
        # return list(permutations(nums))
        if len(nums)<=1:
            return [nums]
        result=[]
        for p in self.permute(nums[1:]):
            for i in xrange(len(p)+1):
                result.append(p[:i]+[nums[0]]+p[i:])
        return result

3.
class Solution(object):
    def func(self,nums,start):
        if start==len(nums)-1:
            self.result.append(nums[:])
            return
        for i in xrange(start,len(nums)):
            nums[start],nums[i]=nums[i],nums[start]
            self.func(nums,start+1)
            nums[start],nums[i]=nums[i],nums[start]
        
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        # from itertools import permutations
        # return list(permutations(nums))
        self.result=[]
        self.func(nums,0)
        return self.result
        
        

class Solution {
    List<List<Integer>> result=new ArrayList<>();
    void swap(int[] arr,int i,int j)
    {
        int tmp=arr[i];
        arr[i]=arr[j];
        arr[j]=tmp;
    }
    
    void func(int[] arr,int start,int size)
    {
        if(start==size-1)
        {
            List<Integer> candidates=new ArrayList<>();
            for(int i=0;i<size;++i)
                candidates.add(arr[i]);
            result.add(candidates);
            return;
        }
        for(int i=start;i<size;++i)
        {
            swap(arr,i,start);
            func(arr,start+1,size);
            swap(arr,i,start);
        }
    }
    
    public List<List<Integer>> permute(int[] nums) {
        if(nums.length==0)
            return result;
        func(nums,0,nums.length);
        return result;
    }
}
