给定一个以字符串表示的非负整数 num，移除这个数中的 k 位数字，使得剩下的数字最小。

注意:
num 的长度小于 10002 且 ≥ k。
num 不会包含任何前导零。

示例 1 :

输入: num = "1432219", k = 3
输出: "1219"
解释: 移除掉三个数字 4, 3, 和 2 形成一个新的最小的数字 1219。

示例 2 :

输入: num = "10200", k = 1
输出: "200"
解释: 移掉首位的 1 剩下的数字为 200. 注意输出不能有任何前导零。

示例 3 :

输入: num = "10", k = 2
输出: "0"
解释: 从原数字移除所有的数字，剩余为空就是0。



对于两个相同长度的数字序列，最左边不同的数字决定了这两个数字的大小



class Solution {
    public String removeKdigits(String num, int k) {
        int n=num.length();
        if(n==k){
            return "0";
        }
        int len=n-k;
        LinkedList<Character> list=new LinkedList<>();
        list.add('0');
        int i=0;
        while(i<n && k>0){
            while(num.charAt(i)<list.getLast() && k>0){
                list.removeLast();
                --k;
            }
            list.add(num.charAt(i++));
        }
        list.removeFirst();
        StringBuilder sb=new StringBuilder(len);
        for(char c:list){
            sb.append(c);
            if(--len==0){
                break;
            }
        }
        while(len-->0){
            sb.append(num.charAt(i++));
        }
        for(i=0;i<sb.length() && sb.charAt(i)=='0';++i);
        return i==sb.length() ? "0":sb.substring(i);
    }
}
