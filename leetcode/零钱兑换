给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总金额，返回 -1。

示例 1:

输入: coins = [1, 2, 5], amount = 11
输出: 3 
解释: 11 = 5 + 5 + 1

class Solution(object):
    def coinChange(self, coins, amount):
        """
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """
        minCount={0:0}
        for money in xrange(1,amount+1):
            minCount[money]=money+1
            for coin in coins:
                if coin<=money and minCount[money-coin]!=money-coin+1:
                    minCount[money]=min(minCount[money-coin]+1,minCount[money])
        if minCount[amount]==amount+1:
            return -1
        return minCount[amount]
