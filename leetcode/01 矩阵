给定一个由 0 和 1 组成的矩阵，找出每个元素到最近的 0 的距离。

两个相邻元素间的距离为 1 。

示例 1: 
输入:

0 0 0
0 1 0
0 0 0
输出:

0 0 0
0 1 0
0 0 0
示例 2: 
输入:

0 0 0
0 1 0
1 1 1
输出:

0 0 0
0 1 0
1 2 1
注意:

给定矩阵的元素个数不超过 10000。
给定矩阵中至少有一个元素是 0。
矩阵中的元素只在四个方向上相邻: 上、下、左、右。




class Solution(object):
    steps=[[0,-1],[-1,0],[0,1],[1,0]]
    
    def updateMatrix(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        m,n=len(matrix),len(matrix[0])
        result=[[sys.maxsize-1 for i in xrange(n)] for j in xrange(m)]
        
        for i in xrange(m):
            for j in xrange(n):
                if matrix[i][j]==0:
                    result[i][j]=0
                else:
                    if i:
                        result[i][j]=min(result[i][j],1+result[i-1][j])
                    if j:
                        result[i][j]=min(result[i][j],1+result[i][j-1])
                        
        for i in xrange(m-1,-1,-1):
            for j in xrange(n-1,-1,-1):
                if i!=m-1:
                    result[i][j]=min(result[i][j],1+result[i+1][j])
                if j!=n-1:
                    result[i][j]=min(result[i][j],1+result[i][j+1])
                    
        return result
        
        
        
        
        
class Solution {
    public int[][] updateMatrix(int[][] matrix) {
        int m=matrix.length,n=matrix[0].length;
        int[][] result=new int[m][n];
        int i,j;
        
        for(i=0;i<m;++i){
            for(j=0;j<n;++j){
                if(matrix[i][j]==0){
                    result[i][j]=0;
                }else{
                    result[i][j]=Integer.MAX_VALUE-1;
                    if(i!=0){
                        result[i][j]=Math.min(result[i][j],1+result[i-1][j]);
                    }
                    if(j!=0){
                        result[i][j]=Math.min(result[i][j],1+result[i][j-1]);
                    }
                }
            }
        }
        for(i=m-1;i>=0;--i){
            for(j=n-1;j>=0;--j){
                if(i!=m-1){
                    result[i][j]=Math.min(result[i][j],1+result[i+1][j]);
                }
                if(j!=n-1){
                    result[i][j]=Math.min(result[i][j],1+result[i][j+1]);
                }
            }
        }
        return result;
    }
}        
