给你一份工作时间表 hours，上面记录着某一位员工每天的工作小时数。

我们认为当员工一天中的工作小时数大于 8 小时的时候，那么这一天就是「劳累的一天」。

所谓「表现良好的时间段」，意味在这段时间内，「劳累的天数」是严格 大于「不劳累的天数」。

请你返回「表现良好时间段」的最大长度。

 

示例 1：

输入：hours = [9,9,6,0,6,6,9]
输出：3
解释：最长的表现良好时间段是 [9,9,6]。




class Solution {
    public int longestWPI(int[] hours) {
        Map<Integer,Integer> map=new HashMap<>((int)(hours.length/0.75)+1);
        int cnt=0;
        int result=0;
        for(int i=0;i<hours.length;++i){
            if(hours[i]>8){
                ++cnt;
            }else{
                --cnt;
            }
            if(cnt>0){
                result=Math.max(result,i+1);
            }else{
                Integer j=map.get(cnt-1);
                if(j!=null){
                    result=Math.max(result,i-j);
                }
                if(!map.containsKey(cnt)){
                    map.put(cnt,i);
                }
            }
        }
        return result;
    }
}
