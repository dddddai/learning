有个马戏团正在设计叠罗汉的表演节目，一个人要站在另一人的肩膀上。
出于实际和美观的考虑，在上面的人要比下面的人矮一点且轻一点。
已知马戏团每个人的身高和体重，请编写代码计算叠罗汉最多能叠几个人。

示例：

输入：height = [65,70,56,75,60,68] weight = [100,150,90,190,95,110]
输出：6
解释：从上往下数，叠罗汉最多能叠 6 层：(56,90), (60,95), (65,100), (68,110), (70,150), (75,190)


注意weight要降序



class Solution {
    public int bestSeqAtIndex(int[] height, int[] weight) {
        Pair[] arr=new Pair[height.length];
        for(int i=0;i<height.length;++i){
            arr[i]=new Pair(height[i],weight[i]);
        }
        Arrays.sort(arr,(a,b) -> a.h==b.h ? b.w-a.w : a.h-b.h);
        List<Integer> tmp=new ArrayList<>(height.length);
        for(int i=0;i<arr.length;++i){
            int l=0,r=tmp.size()-1;
            while(l<=r){
                int mid=(l+r)>>1;
                if(tmp.get(mid)<arr[i].w){
                    l=mid+1;
                }else{
                    r=mid-1;
                }
            }
            if(l==tmp.size()){
                tmp.add(arr[i].w);
            }else{
                tmp.set(l,arr[i].w);
            }
        }
        return tmp.size();
    }
    
    private class Pair{
        int h,w;
        
        Pair(int h,int w){
            this.h=h;
            this.w=w;
        }
    }
}
