给出一个无重叠的 ，按照区间起始端点排序的区间列表。

在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。

示例 1:

输入: intervals = [[1,3],[6,9]], newInterval = [2,5]
输出: [[1,5],[6,9]]
示例 2:

输入: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]
输出: [[1,2],[3,10],[12,16]]
解释: 这是因为新的区间 [4,8] 与 [3,5],[6,7],[8,10] 重叠。




class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> tmp=new ArrayList<>();
        int i=0;
        while(i<intervals.length && intervals[i][1]<newInterval[0]){
            tmp.add(intervals[i++]);
        }
        if(i<intervals.length){
            newInterval[0]=Math.min(newInterval[0],intervals[i][0]);
        }
        while(i+1<intervals.length && intervals[i+1][0]<=newInterval[1]){
            ++i;
        }
        if(i<intervals.length && intervals[i][0]<=newInterval[1]){
            newInterval[1]=Math.max(newInterval[1],intervals[i++][1]);
        }
        tmp.add(newInterval);
        while(i<intervals.length){
            tmp.add(intervals[i++]);
        }
        int[][] result=new int[tmp.size()][2];
        for(int j=0;j<tmp.size();++j){
            result[j]=tmp.get(j);
        }
        return result;
    }
}
