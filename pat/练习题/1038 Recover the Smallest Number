Given a collection of number segments, you are supposed to recover the smallest number from them. 
For example, given {32, 321, 3214, 0229, 87}, we can recover many numbers 
such like 32-321-3214-0229-87 or 0229-32-87-321-3214 with respect to different orders of combinations of these segments, 
and the smallest number is 0229-321-3214-32-87.

Input Specification:

Each input file contains one test case. Each case gives a positive integer N (<=10000) followed by N number segments. 
Each segment contains a non-negative integer of no more than 8 digits. All the numbers in a line are separated by a space.

Output Specification:

For each test case, print the smallest number in one line. Do not output leading zeros.

Sample Input:
5 32 321 3214 0229 87

Sample Output:
22932132143287





#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    vector<string> arr(n);
    for(int i=0;i<n;++i){
        cin>>arr[i];
    }
    sort(arr.begin(),arr.end(),[](string a,string b){
        return stol(a+b)<stol(b+a);
    });
    string result="";
    for(string s:arr){
        result+=s;
    }
    int idx=0;
    while(idx<result.length() && result[idx]=='0'){
        ++idx;
    }
    if(idx==result.length()){
        cout<<0;
    }else{
        cout<<result.substr(idx);
    }
    return 0;
}
