Given an integer with no more than 9 digits, you are supposed to read it 
in the traditional Chinese way. 
Output “Fu” first if it is negative.
For example, -123456789 is read as 
“Fu yi Yi er Qian san Bai si Shi wu Wan liu Qian qi Bai ba Shi jiu”. 
Note: zero (“ling”) must be handled correctly according to the Chinese tradition.
For example, 100800 is “yi Shi Wan ling ba Bai”.

Input Specification:
Each input file contains one test case, which gives an integer with no more than 9 digits.

Output Specification:
For each test case, print in a line the Chinese way of reading the number. 
The characters are separated by a space and there must be no extra space at the end of the line.

Sample Input 1:
-123456789

Sample Output 1:
Fu yi Yi er Qian san Bai si Shi wu Wan liu Qian qi Bai ba Shi jiu


Sample Input 2:
100800

Sample Output 2:
yi Shi Wan ling ba Bai





#include<bits/stdc++.h>
using namespace std;

int a[]={100000000,10000,1000,100,10,9,8,7,6,5,4,3,2,1};
string b[]={"Yi","Wan","Qian","Bai","Shi","jiu","ba","qi","liu","wu","si","san","er","yi"};

string func(int num){
    if(num==0){
        return "ling";
    }
    int i=0;
    while(a[i]>num){
        ++i;
    }
    string pre = a[i]>=10 ? (func(num/a[i])+" "):"";
    string suff;
    if(num%a[i]){
        if(a[i]>=100 && num%a[i]<a[i]/10){
            suff=" ling "+func(num%a[i]);
        }else{
            suff=" "+func(num%a[i]);
        }
    }
    return pre+b[i]+suff;
}

int main(){
    int num;
    cin>>num;
    if(num<0){
        cout<<"Fu ";
        num=-num;
    }
    cout<<func(num);
    return 0;
}
