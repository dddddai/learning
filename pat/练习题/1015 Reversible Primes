A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime. 
For example in the decimal system 73 is a reversible prime because its reverse 37 is also a prime.

Now given any two positive integers N (< 105) and D (1 < D <= 10), you are supposed to tell if N is a reversible prime with radix D.

Input Specification:

The input file consists of several test cases. Each case occupies a line which contains two integers N and D. 
The input is finished by a negative N.

Output Specification:

For each test case, print in one line “Yes” if N is a reversible prime with radix D, or “No” if not.



Sample Input:

73 10
23 2
23 10
-2

Sample Output:

Yes
Yes
No



注意1不是质数！！！



#include<bits/stdc++.h>
using namespace std;

bool isPrime(int num){
    if(num==1){
        return false;
    }
    for(int i=2;i*i<=num;++i){
        if(num%i==0){
            return false;
        }
    }
    return true;
}

vector<int> convert(int num,int radix){
    vector<int> result;
    while(num){
        result.push_back(num%radix);
        num/=radix;
    }
    return result;
}

int main(){
    int n,d;
    while(cin>>n>>d){
        vector<int> converted=convert(n,d);
        if(!isPrime(n)){
            cout<<"No"<<endl;
            continue;
        }
        int reversed=0;
        int tmp=1;
        for(int i=converted.size()-1;i>=0;--i){
            reversed+=converted[i]*tmp;
            tmp*=d;
        }
        cout<<(isPrime(reversed) ? "Yes":"No")<<endl;
    }
    return 0;
}
