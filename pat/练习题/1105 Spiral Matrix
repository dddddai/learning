This time your job is to fill a sequence of N positive integers into a spiral matrix in non-increasing order. 
A spiral matrix is filled in from the first element at the upper-left corner, then move in a clockwise spiral. 
The matrix has m rows and n columns, where m and n satisfy the following: m*n must be equal to N; m>=n; 
and m-n is the minimum of all the possible values.

Input Specification:

Each input file contains one test case. For each case, the first line gives a positive integer N. 
Then the next line contains N positive integers to be filled into the spiral matrix. 
All the numbers are no more than 104. The numbers in a line are separated by spaces.

Output Specification:

For each test case, output the resulting matrix in m lines, each contains n numbers. 
There must be exactly 1 space between two adjacent numbers, and no extra space at the end of each line.


Sample Input:
12
37 76 20 98 76 42 53 95 60 81 58 93

Sample Output:
98 95 93
42 37 81
53 20 76
58 60 76





#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    vector<int> arr(n);
    for(int i=0;i<n;++i){
        cin>>arr[i];
    }
    sort(arr.begin(),arr.end(),greater<int>());
    int a=sqrt(n);
    int b=a;
    while(a*b!=n){
        ++a;
        b=n/a;
    }
    vector<vector<int>> matrix(a,vector<int>(b));
    int top=0,bottom=a-1,left=0,right=b-1;
    int idx=0;
    while(1){
        for(int i=left;i<=right;++i){
            matrix[top][i]=arr[idx++];
        }
        if(++top>bottom){
            break;
        }
        for(int i=top;i<=bottom;++i){
            matrix[i][right]=arr[idx++];
        }
        if(--right<left){
            break;
        }
        for(int i=right;i>=left;--i){
            matrix[bottom][i]=arr[idx++];
        }
        if(--bottom<top){
            break;
        }
        for(int i=bottom;i>=top;--i){
            matrix[i][left]=arr[idx++];
        }
        if(++left>right){
            break;
        }
    }
    for(auto row:matrix){
        cout<<row[0];
        for(int i=1;i<b;++i){
            cout<<' '<<row[i];
        }
        cout<<endl;
    }
    return 0;
}
