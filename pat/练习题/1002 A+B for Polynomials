this time, you are supposed to find A+B where A and B are two polynomials.

Input

Each input file contains one test case. Each case occupies 2 lines, 
and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, 
where K is the number of nonzero terms in the polynomial,
Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. 
It is given that 1 <= K <= 10，0 <= NK < … < N2 < N1 <=1000.



Output

For each test case you should output the sum of A and B in one line, 
with the same format as the input. Notice that there must be NO extra space at the end of each line. 
Please be accurate to 1 decimal place.



Sample Input

2 1 2.4 0 3.2
2 2 1.5 1 0.5



Sample Output

3 2 1.5 1 2.9 0 3.2





#include<bits/stdc++.h>
using namespace std;

int main(){
    int k1;
    cin>>k1;
    map<int,double> m;
    for(int i=0;i<k1;++i){
        int n;
        cin>>n;
        double a;
        cin>>a;
        m.insert({n,a});
    }
    int k2;
    cin>>k2;
    for(int i=0;i<k2;++i){
        int n;
        cin>>n;
        double a;
        cin>>a;
        auto search=m.find(n);
        if(search==m.end()){
            m.insert({n,a});
        }else{
            m[n]+=a;
        }
    }
    int cnt=0;
    for(auto& x:m){
        if(x.second!=0){
            ++cnt;
        }
    }
    cout<<cnt;
    for(auto p=m.rbegin();p!=m.rend();++p){
        if(p->second!=0){
            printf(" %d %.1f",p->first,p->second);
        }
    }
    return 0;
}





import java.util.*;

public class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        String[] line1=sc.nextLine().split(" ");
        String[] line2=sc.nextLine().split(" ");
        int maxNum=0,i=0;
        for(i=1;i<line1.length;i+=2){
            maxNum=Math.max(maxNum,Integer.valueOf(line1[i]));
        }
        for(i=1;i<line2.length;i+=2){
            maxNum=Math.max(maxNum,Integer.valueOf(line2[i]));
        }
        double[] coefficients=new double[maxNum+1];
        for(i=1;i<line1.length;i+=2){
            coefficients[Integer.valueOf(line1[i])]+=Double.valueOf(line1[i+1]);
        }
        for(i=1;i<line2.length;i+=2){
            coefficients[Integer.valueOf(line2[i])]+=Double.valueOf(line2[i+1]);
        }
        int cnt=coefficients.length;
        for(double n:coefficients) {
            if (n == 0) {
                --cnt;
            }
        }
        String[] result=new String[(cnt<<1)+1];
        result[0]=String.valueOf(cnt);
        int idx=1;
        for(i=coefficients.length-1;i>=0;--i) {
            if (coefficients[i]!=0) {
                result[idx++]=String.valueOf(i);
                result[idx++]=String.valueOf(coefficients[i]);
            }
        }
        System.out.println(String.join(" ",result));
    }
}
