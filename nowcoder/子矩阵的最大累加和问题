给定一个矩阵matrix，其中的值有正、有负、有0，返回子矩阵的最大累加和
例如，矩阵matrix为：
-90 48 78
64 -40 64
-81 - 7 66
其中，最大的累加和的子矩阵为：
48 78
-40 64
-7 66
所以返回累加和209。

例如，matrix为：
-1 -1 -1
-1 2 2
-1 -1 -1
其中，最大累加和的子矩阵为：
2 2
所以返回4


输入描述:
第一行有两个整数N，M。分别表示矩阵的行数/列数
接下来N行，每行M个整数表示矩阵内的数


输出描述:
输出一个整数表示答案

示例1

输入
3 3
-90 48 78
64 -40 64
-81 -7 66

输出
209


示例2

输入
3 3
-1 -1 -1
-1 2 2
-1 -1 -1

输出
4




import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt(),m=sc.nextInt();
        int[][] cumulation=new int[n+1][m];
        for(int i=1;i<=n;++i){
            for(int j=0;j<m;++j){
                cumulation[i][j]=cumulation[i-1][j]+sc.nextInt();
            }
        }
        sc.close();
        int result=Integer.MIN_VALUE;
        for(int i=0;i<n;++i){
            for(int j=i+1;j<=n;++j){
                int sum=0,tmp=0;
                for(int k=0;k<m;++k){
                    int num=cumulation[j][k]-cumulation[i][k];
                    sum=Math.max(sum+num,num);
                    result=Math.max(result,sum);
                }
            }
        }
        System.out.print(result);
    }
}
