一条长l的笔直的街道上有n个路灯，若这条街的起点为0，终点为l，
第i个路灯坐标为ai ，每盏灯可以覆盖到的最远距离为d，
为了照明需求，所有灯的灯光必须覆盖整条街，但是为了省电，要使这个d最小，请找到这个最小的d。

输入描述:
每组数据第一行两个整数n和l（n大于0小于等于1000，l小于等于1000000000大于0）。
第二行有n个整数(均大于等于0小于等于l)，为每盏灯的坐标，多个路灯可以在同一点。


输出描述:
输出答案，保留两位小数。

示例1

输入
7 15
15 5 3 7 9 14 0

输出
2.50




import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        while(true){
            int n=0;
            try{
                n=sc.nextInt();
            }catch(Exception e){
                break;
            }
            int l=sc.nextInt();
            double[] arr=new double[n];
            for(int i=0;i<n;++i){
                arr[i]=sc.nextDouble();
            }
            Arrays.sort(arr);
            double d=Math.max(arr[0],l-arr[n-1]);
            for(int i=1;i<n;++i){
                d=Math.max(d,(arr[i]-arr[i-1])/2);
            }
            System.out.printf("%.2f\n",d);
        }
        sc.close();
    }
}
