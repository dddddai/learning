定义局部最小的概念。arr的长度为N(N>1)时，
如果arr[0]<arr[1]，那么arr[0]是局部最小；
如果arr[N-1]<arr[N-2]，那么arr[N-1]是局部最小；
如果0<i<N-1，既有arr[i]<arr[i-1]，又有arr[i]<arr[i+1]，那么arr[i]是局部最小。
给定无序数组arr，已知arr中任意两个相邻的数不相等。写一个函数，只需返回arr中任意一个局部最小出现的位置即可

输入描述:
第一行有一个整数N（N>1）。标书数组长度
接下来一行，每行N个整数表示数组中的数


输出描述:
输出一个整数表示答案

示例1

输入
3
2 1 3

输出
1

说明
因为arr[0] > arr[1] 且 arr[1] < arr[2]，因此1是一个合法答案




import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] arr=new int[n];
        int fst=sc.nextInt();
        int sec=sc.nextInt();
        if(fst<sec){
            System.out.print(0);
            sc.close();
            return;
        }
        arr[0]=fst;
        arr[1]=sec;
        for(int i=2;i<n;++i){
            arr[i]=sc.nextInt();
        }
        sc.close();
        if(arr[n-1]<arr[n-2]){
            System.out.print(n-1);
            return;
        }
        int l=0,r=n-1;
        while(l<r){
            int mid=(l+r)>>1;
            if(arr[mid]>arr[mid-1]){
                r=mid;
            }else if(arr[mid]>arr[mid+1]){
                l=mid+1;
            }else{
                System.out.print(mid);
                return;
            }
        }
        System.out.print(l);
    }
}
