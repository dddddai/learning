题目描述
输入一颗二叉树的跟节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。
路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。

注意要走到根节点才算路径


class Solution:
    # 返回二维列表，内部每个列表表示找到的路径
    def FindPath(self, root, expectNumber):
        # write code here
        self.result=[]
        self.func(root,expectNumber,[])
        return self.result
    
    def func(self,root,target,path):
        if root is None:
            return
        path.append(root.val)
        target-=root.val
        if target==0 and root.left is None and root.right is None:
            self.result.append(path[:])
            
        self.func(root.left,target,path)
        self.func(root.right,target,path)
        path.pop()
        
        

public class Solution {
    ArrayList<ArrayList<Integer>> result=new ArrayList<>();
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int target) {
        func(root,target,new ArrayList<Integer>());
        return result;
    }
    void func(TreeNode root,int target,ArrayList<Integer> path)
    {
        if(root==null)
            return;
        path.add(root.val);
        target-=root.val;
        if(target==0 && root.left==null && root.right==null)
            result.add(new ArrayList<Integer>(path));
        func(root.left,target,path);
        func(root.right,target,path);
        path.remove(path.size()-1);
    }
}
