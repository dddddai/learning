牛牛和妞妞去海边捡了一大袋美丽的贝壳，千辛万苦地运回家后，牛牛和妞妞打算分掉这些贝壳。
牛牛提出，他和妞妞轮流从还没有分配的贝壳中取一定数量的贝壳，直到贝壳分完为止。
分配规则是牛牛每次取剩余贝壳的1/10（向下取整），妞妞每次固定取m个贝壳，妞妞先取。
妞妞想要得到不少于一半的贝壳，又不想太过分，那么她一次最少取多少个贝壳才能得到不少于一半的贝壳呢？

输入描述:
一个正整数n，表示贝壳的总数量，1<=n<=1000000000000000000。


输出描述:
一个正整数m，表示妞妞一次最少取的贝壳数量。


示例1

输入
10

输出
1


示例2

输入
70

输出
3




import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        long n=sc.nextLong();
        sc.close();
        long l=1,r=n/10;
        while(l<r){
            long mid=(l+r)>>1;
            if(less(mid,n)){
                l=mid+1;
            }else{
                r=mid;
            }
        }
        System.out.print(l);
    }
    
    private static boolean less(long take,long n){
        long shell=0;
        long tmp=n;
        while(tmp>0){
            shell+=Math.min(take,tmp);
            if(shell>=((n+1)>>1)){
                return false;
            }
            tmp-=take;
            tmp-=tmp/10;
        }
        return true;
    }
}
