二货小易有一个W*H的网格盒子，网格的行编号为0~H-1，网格的列编号为0~W-1。
每个格子至多可以放一块蛋糕，任意两块蛋糕的欧几里得距离不能等于2。
对于两个格子坐标(x1,y1),(x2,y2)的欧几里得距离为:
( (x1-x2) * (x1-x2) + (y1-y2) * (y1-y2) ) 的算术平方根
小易想知道最多可以放多少块蛋糕在网格盒子里。

输入描述:
每组数组包含网格长宽W,H，用空格分割.(1 ≤ W、H ≤ 1000)


输出描述:
输出一个最多可以放的蛋糕数

示例1

输入
3 2

输出
4



就是每四行四列为一个周期，图案如下：

＊＊    ＊＊   ＊＊
＊＊    ＊＊   ＊＊
    ＊＊   ＊＊   ＊＊
    ＊＊   ＊＊   ＊＊
＊＊    ＊＊   ＊＊
＊＊    ＊＊   ＊＊



import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int w=sc.nextInt(),h=sc.nextInt();
        sc.close();
        if(w==1){
            System.out.print(((h>>2)<<1)+Math.min(h&3,2));
            return;
        }
        int a=((w>>2)<<1)+Math.min(w&3,2);
        int b=(((w-2)>>2)<<1)+Math.min((w-2)&3,2);
        int result=((a+b)<<1)*(h>>2);
        int mod=h&3;
        if(mod>0){
            result+=a;
            if(mod>1){
                result+=a;
                if(mod>2){
                    result+=b;
                }
            }
        }
        System.out.print(result);
    }
}
