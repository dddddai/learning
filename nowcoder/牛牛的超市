牛牛最近在家闲的无聊，所以决定在家开一个小超市，为了方便卖东西，牛牛发明了一种用来兑换东西的新型货币，
牛牛给这种新型货币起了个名字叫牛币，现在牛牛有n(n<=50)种不同的币值，其中币值为 value(value<=50) 的有 w(w<=20) 个，
现在牛妹来到牛牛的超市买东西，牛妹有 x(x<=100) 元牛币，但是牛妹想将 x 元牛币换成若干零钱，请问有多少种换钱的方案？


示例1

输入
2,10,[[1, 5],[ 2, 4]]

输出
2


说明

10元可以由 2张1元的和4张2元的组成，也可以由4张1元的和3张2元的组成

备注:

x可以不属于n种币值之一




import java.util.*;

public class Solution {
    /**
     * 
     * @param n int整型 ：牛币值种类数
     * @param x int整型 ：牛妹拥有的钱数
     * @param a int整型二维数组 ：第二个vector中的第一列表示币值，第二列表示牛牛拥有币值的个数
     * @return int整型
     */
    public int solve (int n, int x, int[][] a) {
        int[] dp=new int[x+1];
        dp[0]=1;
        for(int i=0;i<n;++i){
            for(int j=x-1;j>=0;--j){
                for(int k=1;k<=a[i][1] && j+k*a[i][0]<=x;++k){
                    if(dp[j]>0){
                        dp[j+k*a[i][0]]+=dp[j];
                    }
                }
            }
        }
        return dp[x];
    }
}
