题目描述
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。
（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）



1、复制每个节点，如：复制节点A得到A1，将A1插入节点A后面
2、遍历链表，A1->random = A->random->next;
3、将链表拆分成原链表和复制后的链表



class Solution:
    # 返回 RandomListNode
    def Clone(self, pHead):
        # write code here
        if pHead is None:
            return
        
        p=pHead
        while p:
            node=RandomListNode(p.label)
            node.next=p.next
            p.next=node
            p=p.next.next
            
        p=pHead
        while p:
            if p.random:
                p.next.random=p.random.next
            p=p.next.next
            
        p=pHead
        result=pHead.next
        while p.next:
            tmp=p.next
            p.next=tmp.next
            p=tmp
        return result
        
        
        

public class Solution {
    public RandomListNode Clone(RandomListNode pHead)
    {
        if(pHead==null){
            return null;
        }
        RandomListNode p=pHead;
        while(p!=null){
            RandomListNode node=new RandomListNode(p.label);
            node.next=p.next;
            p.next=node;
            p=p.next.next;
        }
        p=pHead;
        while(p!=null){
            if(p.random!=null){
                p.next.random=p.random.next;
            }
            p=p.next.next;
        }
        p=pHead;
        RandomListNode result=pHead.next;
        while(p.next!=null){
            RandomListNode tmp=p.next;
            p.next=tmp.next;
            p=tmp;
        }
        return result;
    }
}
