对于一个由0..n的所有数按升序组成的序列，我们要进行一些筛选，
每次我们取当前所有数字中从小到大的第奇数位个的数，并将其丢弃。
重复这一过程直到最后剩下一个数。请求出最后剩下的数字。


输入描述:
每组数据一行一个数字，为题目中的n(n小于等于1000)。


输出描述:
一行输出最后剩下的数字。


示例1

输入
500

输出
255




因为是从0开始，所以第一轮移走的是二进制下最右边为0的位置（从0开始的偶数位置）上的数，
然后我们发现第二轮各个number的位置等于number/2，即从number位置到number>>1位置，
这时候我们依然移走二进制下最右边为0的位置（1(01)  5(101) 9(1001) ……它们第二轮对应的位置是0， 2， 4），
最后剩一个数肯定是0到n中从右往左二进制下1最多的那个数，因为它每次的位置都是奇数位置。



import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        while(sc.hasNext()){
            int n=sc.nextInt();
            if((n&(n+1))==0){
                System.out.print(n);
            }else{
                int a=1;
                while(a<=n){
                    a<<=1;
                }
                System.out.println((a>>1)-1);
            }
        }
        sc.close();
    }
}
