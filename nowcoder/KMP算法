
给定两个字符串str和match，长度分别为N和M。实现一个算法，如果字符串str中含有子串match，
则返回match在str中的开始位置，不含有则返回-1
若出现了多次，则按照升序输出所有出现位置


输入描述:
第一行一个字符串str
第二行一个字符串match


输出描述:
输出若干个数，分别为match在str中出现的位置，从0开始标号。
若不存在输出-1


示例1

输入
acbc
bc

输出
2


示例2

输入
acbc
bcc

输出
-1


示例3

输入
ababab
ab

输出
0 2 4



用的sunday算法




import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        String match=sc.nextLine();
        sc.close();
        Map<Character,Integer> map=new HashMap<>((int)(match.length()/0.75)+1);
        for(int i=0;i<match.length();++i){
            map.put(match.charAt(i),i);
        }
        boolean first=true;
        for(int i=0;i<=str.length()-match.length();){
            boolean flag=true;
            for(int j=0;j<match.length();++j){
                if(str.charAt(i+j)!=match.charAt(j)){
                    flag=false;
                    if(i+match.length()<str.length()){
                        Integer idx=map.get(str.charAt(i+match.length()));
                        if(idx==null){
                            i+=match.length()+1;
                        }else{
                            i+=match.length()-idx;
                        }
                    }else{
                        if(first){
                            System.out.print(-1);
                        }
                        return;
                    }
                    break;
                }
            }
            if(flag){
                if(first){
                    System.out.print(i++);
                    first=false;
                }else{
                    System.out.print(" "+i++);
                }
            }
        }
        if(first){
            System.out.print(-1);
        }
    }
}
