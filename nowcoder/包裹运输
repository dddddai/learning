题目描述
工厂生产的产品包装在相同高度h，尺寸为1 * 1,2 * 2，3 * 3，4 * 4，5 * 5，6 * 6的方形包装中。
这些产品始终以与产品高度相同的尺寸为6 * 6的包裹交付给客户。因为邮费很贵，所以工厂要想方设法的减小每个订单运送时的包裹数量。
他们很需要有一个好的程序帮他们解决这个问题从而节省费用。现在这个程序由你来设计。

输入描述:
输入文件包括几行，每一行代表一个订单。每个订单里的一行包括六个整数，中间用空格隔开，分别为 1*1 至 6*6 这六种产品的数量。
输入文件将以 6 个 0 组成的一行结尾。

输出描述:
除了输入的最后一行 6 个 0 以外，输入文件里每一行对应着输出文件的一行，每一行输出一个整数代表对应的订单所需的最小包裹数。

示例1

输入
0 0 4 0 0 1
7 5 1 0 0 0
0 0 0 0 0 0

输出
2
1



import java.util.*;

public class Main{
    private static final int[] twoInThree={0,5,3,1};
    
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        while(true){
            int[] arr=new int[7];
            for(int i=1;i<7;++i){
                arr[i]=sc.nextInt();
            }
            int result=arr[6]+arr[5]+arr[4]+((arr[3]+3)>>2);
            result+=Math.max(0,(arr[2]-arr[4]*5-twoInThree[arr[3]&3]+8)/9);
            result+=Math.max(0,((arr[1]-result*36+arr[6]*36+arr[5]*25+(arr[4]<<4)
                             +arr[3]*9+(arr[2]<<2))+35)/36);
            if(result==0){
                break;
            }
            System.out.println(result);
            sc.nextLine();
        }
        sc.close();
    }
}
