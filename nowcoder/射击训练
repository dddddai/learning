小Q是一个专业的射击运动员，有一天他像往常一样进行n次射击训练，每次射击他都会取最高的四次得分作为最终得分来衡量他的射击状态，
但是今天他制定了一个奇怪的规则：在n次射击得分中取出四次得分a,b,c,d，并且满足a*b*c=d作为最终得分来衡量他的射击状态。

但是小Q发现满足这个条件的(a,b,c,d)可能不止一个，小Q需要你来帮助他计算一共有多少个这种(a,b,c,d)

输入描述:
输入包括两行，第一行包括一个正整数n(4≤n≤500)，表示射击的次数。
第二行n个正整数w[i](1≤w[j]≤10^6)，表示每次射击的得分。


输出描述:
输出可以作为最终得分的种数。

示例1

输入
6
10 2 2 7 40 160

输出
2

说明
有两种满足条件的(a,b,c,d)分别是(10,2,2,40)和(2,2,40,160)。





import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] w=new int[n];
        Set<Integer> set=new HashSet<>((int)(n/0.75)+1);
        for(int i=0;i<n;++i){
            w[i]=sc.nextInt();
            set.add(w[i]);
        }
        sc.close();
        Arrays.sort(w);
        int result=0;
        for(int i=0;i<n-2;++i){
            if(w[i]*w[i+1]*w[i+2]>w[n-1]){
                break;
            }
            for(int j=i+1;j<n-1;++j){
                if(w[i]*w[j]*w[j+1]>w[n-1]){
                    break;
                }
                for(int k=j+1;k<n;++k){
                    int product=w[i]*w[j]*w[k];
                    if(product>w[n-1]){
                        break;
                    }
                    if(set.contains(product)){
                        ++result;
                    }
                }
            }
        }
        System.out.print(result);
    }
}
